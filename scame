#!/usr/bin/env python
# -*- coding: utf-8; -*-

# Copyright (C) 2014  Nicolas Lamirault <nicolas.lamirault@gmail.com>

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

"""
Install Scame.
"""

from os import path
import subprocess
import sys


HOME = path.expanduser('~')
TARGET_DIRECTORY = path.join(HOME, '.emacs.d')
REPOSITORY = 'https://github.com/nlamirault/scame.git'

OKGREEN = '\033[32m'
FAIL = '\033[31m'
ENDC = '\033[0m'


def success(s):
    print(OKGREEN + s + ENDC)


def fail(s):
    print(FAIL + s + ENDC)


def install():
    success("Download Emacs configuration")
    subprocess.check_call(['git', 'clone', REPOSITORY, TARGET_DIRECTORY])

def cask():
    success("Install dependencies using Cask")
    cask = path.join(HOME, '.cask/bin/cask')
    os.chdir(path.join(HOME, '.emacs.d')
    subprocess.check_call([cask, 'install'])
    os.chdir(HOME)

def main():
    try:
        install()
        cask()
        success("""Scame installed.""")
    except Exception as error:
        fail('{0!s}'.format(error))
        sys.exit(1)



if __name__ == '__main__':
    sys.exit(main())
